import { Telegraf } from "telegraf";
import { CustomContext } from "./bot"; // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø—É—Ç—å
import { logger, LogType } from "./utils/logger"; // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø—É—Ç—å

export const setupCommands = (bot: Telegraf<CustomContext>): void => {
  // –ö–æ–º–∞–Ω–¥–∞ /start
  bot.start(async (ctx) => {
    logger.info("/start command handled by commands.ts", {
      type: LogType.USER_ACTION,
      userId: ctx.from?.id,
    });
    const userFirstName =
      ctx.session?.user?.first_name || ctx.from?.first_name || "–Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü";
    await ctx.reply(
      `üöÄ –ü—Ä–∏–≤–µ—Ç, ${userFirstName}! –Ø - AI Starter Pack Bot.\n\n` +
        `–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.`
    );
  });

  // –ö–æ–º–∞–Ω–¥–∞ /help
  bot.help(async (ctx) => {
    logger.info("/help command handled by commands.ts", {
      type: LogType.USER_ACTION,
      userId: ctx.from?.id,
    });
    const helpMessage =
      "ü§ñ **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n\n" +
      "üöÄ /start - –ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n" +
      "‚ùì /help - –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é\n\n" +
      "‚ú® –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–¥–µ–ø–ª–æ–µ–Ω –Ω–∞ Railway!";
    await ctx.reply(helpMessage, { parse_mode: "Markdown" });
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  bot.on("text", async (ctx) => {
    logger.info("Text message received", {
      type: LogType.USER_ACTION,
      userId: ctx.from?.id,
      data: { text: ctx.message.text },
    });

    await ctx.reply(
      `üëÇ –Ø –ø–æ–ª—É—á–∏–ª —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ: "${ctx.message.text}"\n\n` +
        `–ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.`
    );
  });

  logger.info(
    "‚úÖ Commands successfully registered: /start, /help, text handler",
    {
      type: LogType.SYSTEM,
    }
  );
};
