/**
 * üß™ –¢–µ—Å—Ç—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤
 */

import { describe, test, expect, beforeAll } from 'bun:test';
import { promises as fs } from 'fs';
import path from 'path';
import { InstagramCanvasService, ColorTemplate } from '../services/instagram-canvas.service';

describe('üé® Template Preview System', () => {
  const previewDir = path.join(process.cwd(), 'template-previews');

  beforeAll(async () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–ø–∫–∞ —Å –ø—Ä–µ–≤—å—é —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    try {
      await fs.access(previewDir);
    } catch {
      console.warn('‚ö†Ô∏è –ü–∞–ø–∫–∞ template-previews –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: bun scripts/generate-template-previews.ts');
    }
  });

  test('üìã –í—Å–µ —Ü–≤–µ—Ç–æ–≤—ã–µ —Ç–µ–º–ø–ª–µ–π—Ç—ã –∏–º–µ—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é', () => {
    const templates = InstagramCanvasService.getColorTemplates();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤
    expect(Object.keys(templates).length).toBeGreaterThan(5);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ–º–ø–ª–µ–π—Ç–∞
    Object.entries(templates).forEach(([_key, template]) => {
      expect(template.name).toBeTruthy();
      expect(template.emoji).toBeTruthy();
      expect(template.background).toBeTruthy();
      expect(template.accent).toBeTruthy();
      expect(template.cardBackground).toBeTruthy();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ name –Ω–µ –ø—É—Å—Ç–æ–µ
      expect(template.name.length).toBeGreaterThan(0);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ background —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–∞–ª–∏–¥–Ω—ã–π CSS
      expect(template.background).toMatch(/^(#|linear-gradient|rgba?)/);
    });
  });

  test('üñºÔ∏è –ü—Ä–µ–≤—å—é-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—Ç –¥–ª—è –≤—Å–µ—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤', async () => {
    const templates = InstagramCanvasService.getColorTemplates();
    
    for (const [key] of Object.entries(templates)) {
      const previewPath = path.join(previewDir, `${key}-preview.png`);
      
      try {
        await fs.access(previewPath);
        const stats = await fs.stat(previewPath);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –ø—É—Å—Ç–æ–π
        expect(stats.size).toBeGreaterThan(1000); // –ú–∏–Ω–∏–º—É–º 1KB
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ PNG —Ñ–∞–π–ª
        expect(previewPath).toMatch(/\.png$/);
      } catch (error) {
        console.warn(`‚ö†Ô∏è –ü—Ä–µ–≤—å—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è ${key}: ${previewPath}`);
        // –í —Ç–µ—Å—Ç–µ –Ω–µ —Ñ–µ–π–ª–∏–º, —Ç–∞–∫ –∫–∞–∫ –ø—Ä–µ–≤—å—é –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã
      }
    }
  });

  test('üé® –í—Å–µ luxury —Ç–µ–º–ø–ª–µ–π—Ç—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç', () => {
    const templates = InstagramCanvasService.getColorTemplates();
    
    const luxuryTemplates = [
      ColorTemplate.BLACK_GOLD,
      ColorTemplate.EMERALD_LUXURY,
      ColorTemplate.ROYAL_PURPLE,
      ColorTemplate.PLATINUM_SILVER,
      ColorTemplate.BURGUNDY_GOLD,
      ColorTemplate.MIDNIGHT_BLUE,
      ColorTemplate.COPPER_BRONZE,
      ColorTemplate.FOREST_GOLD,
      ColorTemplate.ROSE_GOLD,
      ColorTemplate.CHARCOAL_MINT,
    ];
    
    luxuryTemplates.forEach(template => {
      expect(templates[template]).toBeTruthy();
      expect(templates[template].name).toBeTruthy();
      expect(templates[template].emoji).toBeTruthy();
    });
  });

  test('üåà –¶–≤–µ—Ç–æ–≤—ã–µ —Å—Ö–µ–º—ã —Ä–∞–∑–ª–∏—á–∞—é—Ç—Å—è –º–µ–∂–¥—É —Å–æ–±–æ–π', () => {
    const templates = InstagramCanvasService.getColorTemplates();
    const backgrounds = Object.values(templates).map(t => t.background);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ñ–æ–Ω—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã
    const uniqueBackgrounds = new Set(backgrounds);
    expect(uniqueBackgrounds.size).toBe(backgrounds.length);
  });

  test('üì∑ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä URL —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ', () => {
    const originalPort = process.env.HTTP_SERVER_PORT;
    process.env.HTTP_SERVER_PORT = '7103';
    
    const expectedUrl = 'http://localhost:7103/preview/black_gold-preview.png';
    const serverPort = process.env.HTTP_SERVER_PORT || '7103';
    const previewUrl = `http://localhost:${serverPort}/preview/black_gold-preview.png`;
    
    expect(previewUrl).toBe(expectedUrl);
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    if (originalPort) {
      process.env.HTTP_SERVER_PORT = originalPort;
    } else {
      delete process.env.HTTP_SERVER_PORT;
    }
  });

  test('üéØ ColorTemplate enum —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –æ–∂–∏–¥–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è', () => {
    const expectedTemplates = [
      'WHITE', 'MORNING', 'OCEAN', 'SUNSET', 'NATURE', 'FIRE',
      'BLACK_GOLD', 'EMERALD_LUXURY', 'ROYAL_PURPLE', 'PLATINUM_SILVER',
      'BURGUNDY_GOLD', 'MIDNIGHT_BLUE', 'COPPER_BRONZE', 'FOREST_GOLD',
      'ROSE_GOLD', 'CHARCOAL_MINT'
    ];
    
    expectedTemplates.forEach(template => {
      expect(ColorTemplate[template as keyof typeof ColorTemplate]).toBeTruthy();
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    expect(Object.keys(ColorTemplate).length).toBe(expectedTemplates.length);
  });
});
